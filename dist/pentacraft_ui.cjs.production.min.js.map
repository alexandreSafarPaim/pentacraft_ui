{"version":3,"file":"pentacraft_ui.cjs.production.min.js","sources":["../src/contexts/context.tsx","../src/hooks/useTheme.ts","../src/utils/element.ts","../src/components/Form/index.tsx","../src/config/themes.ts","../src/components/Inputs/Switcher/index.tsx","../src/utils/format.ts","../src/components/Inputs/NavigationButton/index.tsx","../src/contexts/formContext.tsx","../src/components/Layout/MenuItem/index.tsx","../src/components/Layout/MenuEndItem/index.tsx","../src/components/Layout/index.tsx","../src/components/Layout/Logo/index.tsx","../src/components/Layout/Menu/index.tsx","../src/components/Layout/HeaderMenu/index.tsx","../src/components/Layout/Content/index.tsx","../src/components/Layout/HeaderActions/index.tsx","../src/components/Filter/index.tsx","../src/components/Pagination/index.tsx","../src/components/Table/index.tsx","../src/components/Table/TBody/index.tsx","../src/components/Table/THead/index.tsx","../src/components/Table/TH/index.tsx","../src/components/Table/TD/index.tsx","../src/components/Table/TR/index.tsx","../src/components/List/index.tsx","../src/components/List/ListContent/index.tsx","../src/components/Page/PageContent/index.tsx","../src/components/Page/index.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/Inputs/Button/index.tsx","../src/components/Inputs/Select/index.tsx","../src/components/Inputs/Input/index.tsx","../src/components/Inputs/LinkButton/index.tsx","../src/utils/color.ts"],"sourcesContent":["import React from 'react';\nimport { LayoutMenuContextType } from '../types/types';\n\nexport const LayoutMenuContext = React.createContext<LayoutMenuContextType>({\n  showMenu: false,\n});\n","import React from 'react';\nimport { LayoutMenuContext } from '../contexts/context';\n\nexport function useTheme() {\n    const { scheme } = React.useContext(LayoutMenuContext);\n    return scheme;\n}","import React from 'react';\n\nexport const isComponent = (children: any, elementName: string) => {\n  if (children.type.name) {\n    return children.type.name == elementName;\n  } else {\n    return children.type.displayName == elementName;\n  }\n};\n\nexport const defineChildrenElement = (\n  children: React.ReactNode,\n  elementName: string,\n  defaultElement: React.ReactNode\n) => {\n  let element = defaultElement;\n  if (Array.isArray(children)) {\n    children.forEach((child: any) => {\n      if (isComponent(child, `${elementName}`)) {\n        element = child;\n      }\n    });\n  } else {\n    if (isComponent(children, `${elementName}`)) {\n      element = children;\n    }\n  }\n  return element;\n};\n\nexport const defineAllChildrenElement = (\n  children: React.ReactNode,\n  elementName: string\n) => {\n  let element = [];\n  if (Array.isArray(children)) {\n    children.forEach((child: any) => {\n      if (isComponent(child, `${elementName}`)) {\n        element.push(child);\n      }\n    });\n  } else {\n    if (isComponent(children, `${elementName}`)) {\n      element.push(children);\n    }\n  }\n\n  return element;\n};\n\nexport const childrenWithout = (children: any, elementNames: string[]) => {\n  let restChildren = null;\n\n  const elements = elementNames.map(elementName => {\n    return `${elementName}`;\n  });\n\n  if (Array.isArray(children)) {\n    restChildren = children.filter(\n      (child: any) =>\n        !elements.includes(child.type.name || child.type.displayName)\n    );\n  } else {\n    restChildren = children.props.children;\n  }\n  return restChildren;\n};\n","import React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../hooks/useTheme';\nimport { defineChildrenElement } from '../../utils/element';\n\nexport interface PCLayoutFormProps\n  extends Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onSubmit'> {\n  title?: string;\n  onSubmit?: (event: React.FormEvent<HTMLFormElement>, values: any) => void;\n}\n\nexport const PCLayoutForm = ({\n  children,\n  onSubmit,\n  className,\n  style,\n  title,\n  ...props\n}: PCLayoutFormProps) => {\n  const scheme = useTheme();\n\n  const actions = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutFormActions.name, null);\n    } else {\n      return defineChildrenElement(children, Form.Actions.name, null);\n    }\n  }, [children]);\n  const content = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutFormContent.name, null);\n    } else {\n      return defineChildrenElement(children, Form.Content.name, null);\n    }\n  }, [children]);\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const data = new FormData(form);\n    const entries = data.entries();\n    const values = Object.fromEntries(entries);\n    onSubmit?.(event, values);\n  };\n\n  return (\n    <form\n      {...props}\n      className={twMerge(`flex flex-col w-full h-full`)}\n      onSubmit={handleFormSubmit}\n      style={{\n        ...style,\n      }}\n    >\n      <div className=\"w-full h-full flex flex-col px-3 pt-2\">\n        <div className=\"flex items-center justify-between\">\n          {title && <h1 className=\"text-3xl font-bold mb-2\">{title}</h1>}\n          {actions}\n        </div>\n        <div\n          className={`flex flex-col h-[90%] w-full rounded-xl overflow-hidden`}\n          style={{\n            boxShadow: '0 0 10px -3px #0000007b',\n            backgroundColor: scheme?.backgroundSecondary,\n            transition: 'background-color 0.3s ease-in-out',\n          }}\n        >\n          <div className={`w-ful h-full overflow-auto`}>{content}</div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport const PCLayoutFormActions = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  return <div className=\"flex gap-3 items-center justify-end\">{children}</div>;\n};\n\nexport const PCLayoutFormContent = ({\n  children,\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => {\n  return (\n    <div className={twMerge('h-full w-full', className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst Form = {\n  Root: PCLayoutForm,\n  Actions: PCLayoutFormActions,\n  Content: PCLayoutFormContent,\n};\n\nexport default Form;\n","import { ColorScheme } from '../components';\n\nexport const light: ColorScheme = {\n  primary: '#d1d6e2',\n  secondary: '#636a7e',\n  tertiary: '#bfc6d6',\n  background: '#f0f3f8',\n  backgroundSecondary: '#ffffff',\n  buttonPrimary: '#2B2835',\n  buttonPrimaryHover: '#4B4759',\n  buttonPrimaryText: '#ffffff',\n  buttonPrimaryTextHover: '#f5f5f5',\n  buttonSecondary: '#d2cfdb',\n  buttonSecondaryHover: '#f8f6fd',\n  buttonSecondaryText: '#7f7d83',\n  buttonSecondaryTextHover: '#17141b',\n  textPrimary: '#121419',\n  textSecondary: '#161921',\n  textPrimaryHover: '#000000',\n  textSecondaryHover: '#000000',\n  inputPrimaryBackground: '#ffffff',\n  inputPrimaryText: '#000000',\n  inputPrimaryPlaceholder: '#a9afbe',\n  inputPrimaryBorder: '#a9afbe',\n  inputSecondaryBackground: '#dee1e9',\n  inputSecondaryText: '#000000',\n  inputSecondaryPlaceholder: '#a9afbe',\n  inputSecondaryBorder: '#a9afbe',\n  success: '#97c597',\n  error: '#e57878',\n  warning: '#dfdf3a',\n  info: '#7c7cfd',\n};\n\nexport const dark: ColorScheme = {\n  primary: '#424650',\n  secondary: '#242831',\n  tertiary: '#5c606a',\n  background: '#485165',\n  backgroundSecondary: '#494f5b',\n  buttonPrimary: '#d4d2de',\n  buttonPrimaryHover: '#ada8bd',\n  buttonPrimaryText: '#3b3b3b',\n  buttonPrimaryTextHover: '#3c3c3c',\n  buttonSecondary: '#2b2835',\n  buttonSecondaryHover: '#4b4759',\n  buttonSecondaryText: '#c0c0cb',\n  buttonSecondaryTextHover: '#ffffff',\n  textPrimary: '#dadada',\n  textSecondary: '#a9afbe',\n  textPrimaryHover: '#ffffff',\n  textSecondaryHover: '#ffffff',\n  inputPrimaryBackground: '#545965',\n  inputPrimaryText: '#ffffff',\n  inputPrimaryPlaceholder: '#a9afbe',\n  inputPrimaryBorder: '#a9afbe',\n  inputSecondaryBackground: '#636a7e',\n  inputSecondaryText: '#ffffff',\n  inputSecondaryPlaceholder: '#a9afbe',\n  inputSecondaryBorder: '#a9afbe',\n  success: '#98e298',\n  error: '#ff6565',\n  warning: '#ffff4c',\n  info: '#9b9bff',\n};\n","import React from 'react';\nimport { HiLightBulb, HiOutlineLightBulb } from 'react-icons/hi';\n\nexport const Switcher = ({\n  value,\n  onChange,\n}: {\n  value: boolean;\n  onChange: (value: boolean) => void;\n}) => {\n  const handleCheckboxChange = () => {\n    onChange(!value);\n  };\n\n  return (\n    <>\n      <label className=\"flex cursor-pointer select-none items-center\">\n        <div className=\"relative\">\n          <input\n            type=\"checkbox\"\n            checked={value}\n            onChange={handleCheckboxChange}\n            className=\"sr-only\"\n          />\n          <div\n            className={`box block h-8 w-14 rounded-full ${\n              value ? 'bg-slate-400' : 'bg-slate-300'\n            }`}\n          ></div>\n          <div\n            className={`absolute left-1 top-1 flex h-6 w-6 items-center justify-center rounded-full bg-white transition text-slate-900 ${\n              value ? 'translate-x-full' : ''\n            }`}\n          >\n            {value ? (\n              <HiLightBulb size={20} />\n            ) : (\n              <HiOutlineLightBulb size={20} />\n            )}\n          </div>\n        </div>\n      </label>\n    </>\n  );\n};\n","export const returnInitials = (name: string): string => {\n  const names = name.split(' ');\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n  return `${firstName[0].toUpperCase()}${\n    lastName?.length ? lastName[0].toUpperCase() : ''\n  }`;\n};\n\nexport const capitalizeName = (name: string): string => {\n  const names = name.split(' ');\n  let fullName = '';\n  names.forEach(n => {\n    fullName += `${n[0].toUpperCase()}${n.slice(1).toLowerCase()} `;\n  });\n  return fullName.trim();\n};\n","import Link from 'next/link';\nimport React, { useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { PCLayoutNavigationButtonProps } from '../../../types/types';\n\nexport const NavigationButton = ({\n  children,\n  href,\n  onClick,\n  className,\n  style,\n  fill,\n}: PCLayoutNavigationButtonProps) => {\n  const scheme = useTheme();\n  const [hover, setHover] = useState(false);\n\n  const handleMouseEnter = () => {\n    setHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHover(false);\n  };\n\n  if (!href) {\n    return (\n      <button\n        type=\"button\"\n        className={twMerge(\n          `flex items-center h-8 text-left w-full px-4 hover hover:text-white hover:bg-slate-900`,\n          className\n        )}\n        style={{\n          transition:\n            'background-color 0.3s ease-in-out, color 0.3s ease-in-out',\n          backgroundColor: fill\n            ? hover\n              ? scheme?.buttonPrimaryHover\n              : scheme?.buttonPrimary\n            : 'inherit',\n          color: fill\n            ? hover\n              ? scheme?.buttonPrimaryTextHover\n              : scheme?.buttonPrimaryText\n            : 'inherit',\n          ...style,\n        }}\n        onClick={onClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {children}\n      </button>\n    );\n  } else {\n    return (\n      <Link\n        href={href ?? '#'}\n        className={twMerge(\n          `flex items-center h-8 text-left w-full px-4 hover:text-white hover:bg-slate-900`,\n          className\n        )}\n        style={{\n          transition: 'background-color 0.3s ease-in-out',\n          ...style,\n        }}\n      >\n        {children}\n      </Link>\n    );\n  }\n};\n","import React from 'react';\nimport { FormContextType } from '../types/types';\n\nexport const FormContext = React.createContext<FormContextType>({\n  formRef: { current: null },\n});\n","import Link from 'next/link';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { BiChevronDown, BiChevronUp, BiSolidTagAlt } from 'react-icons/bi';\nimport { NavigationButton } from '../../Inputs/NavigationButton';\nimport { LayoutMenuContext } from '../../../contexts/context';\nimport { PCLayoutMenuCollapseItemProps, PCLayoutMenuItemProps } from '../../../types/types';\n\nexport const PCLayoutMenuItem = ({\n  children,\n  href,\n  collapseItens,\n  icon,\n}: PCLayoutMenuItemProps) => {\n  const { showMenu, scheme } = React.useContext(LayoutMenuContext);\n\n  const [active, setActive] = useState(false);\n  \n  const [showSubMenu, setShowSubMenu] = useState(false);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n\n  useEffect(() => {\n    if (window && typeof window !== 'undefined') {\n      const path = window.location.pathname;\n      if (collapseItens && collapseItens.length > 0) {\n        collapseItens.forEach(item => {\n          if (item.href && path.includes(item.href)) {\n            setActive(true);\n          }\n        });\n      } else if (href && path.includes(href)) {\n        setActive(true);\n      }\n    }\n  }, []);\n\n  const handleClickOutside = (e: any) => {\n    if (\n      ref.current &&\n      !ref.current.contains(e.target as Node)\n      && !showMenu\n    ) {\n      console.log('click',showMenu);\n      setShowSubMenu(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('click', handleClickOutside);\n\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, [showMenu]);\n\n\n  useEffect(() => {\n    if(!showMenu){\n      setShowSubMenu(false);\n    }\n  }, [showMenu])\n\n  const Icon = useMemo(() => {\n    return icon ?? BiSolidTagAlt;\n  }, [icon]);\n\n  return (\n    <div\n    ref={ref}\n      className={`flex flex-col relative z-30`}\n      style={{\n        color: active\n          ? scheme?.buttonSecondaryTextHover\n          : scheme?.buttonSecondaryText,\n        transition: 'color 0.3s ease-in-out',\n      }}\n    >\n      <NavigationButton\n        href={href}\n        onClick={() => {\n          if (collapseItens) setShowSubMenu(!showSubMenu);\n        }}\n      >\n        <div className=\"w-[20px] h-[20px]\">\n          <Icon size={20} />\n        </div>\n        <span\n          className=\"pl-2 whitespace-nowrap\"\n          style={{\n            opacity: showMenu ? 1 : 0,\n            transition: 'opacity 0.3s ease-in-out',\n          }}\n        >\n          {children}\n        </span>\n        {collapseItens && (\n          <div className=\"w-[14px] h-[14px] ml-2\">\n            {showSubMenu ? (\n              <BiChevronUp size={14} />\n            ) : (\n              <BiChevronDown size={14} />\n            )}\n          </div>\n        )}\n      </NavigationButton>\n      <div\n        className={`mx-4 rounded-md overflow-hidden z-30`}\n        style={{\n          transition: showMenu ? 'all 0.3s ease-in-out' : 'all 0s ease-in-out',\n          marginBlock: showSubMenu ? '0.2rem' : '0',\n          maxHeight: showSubMenu ? `calc(2rem * ${collapseItens?.length} + 1rem)` : '0',\n          position: !showMenu ? 'fixed' : 'relative',\n          left: !showMenu ? `calc(2rem * 1.2)` : '0',\n          backgroundColor: scheme?.secondary,\n        }}\n      >\n        <div className=\"p-1 flex flex-col\">\n          {collapseItens?.map((item, index) => (\n            <PCLayoutMenuCollapseItem\n              showSubMenu={showSubMenu}\n              key={index}\n              href={item.href}\n              label={item.label}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction PCLayoutMenuCollapseItem({\n  showSubMenu,\n  href,\n  label,\n}: PCLayoutMenuCollapseItemProps) {\n  const { showMenu } = React.useContext(LayoutMenuContext);\n\n  return (\n    <Link\n      href={href ?? '#'}\n      className=\"flex items-center h-8 text-center w-full\"\n      style={{\n        transition: 'background-color 0.3s ease-in-out',\n        justifyContent: !showMenu ? 'center' : 'flex-start',\n        paddingInline: !showMenu ? '0.8rem' : '0',\n      }}\n    >\n      <span\n        className={`text-white hover:text-slate-200 `}\n        style={{\n          opacity: !showMenu && !showSubMenu ? 0 : 1,\n          transition: 'all 0.3s ease-in-out',\n        }}\n      >\n        {label}\n      </span>\n    </Link>\n  );\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { BiSolidTagAlt } from 'react-icons/bi';\nimport { NavigationButton } from '../../Inputs/NavigationButton';\nimport { LayoutMenuContext } from '../../../contexts/context';\nimport { PCLayoutMenuEndItemProps } from '../../../types/types';\n\nexport const PCLayoutMenuEndItem = ({\n  children,\n  href,\n  icon,\n  onClick,\n}: PCLayoutMenuEndItemProps) => {\n  const { showMenu, scheme } = React.useContext(LayoutMenuContext);\n\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (window && typeof window !== 'undefined') {\n      const path = window.location.pathname;\n      if (href && path.includes(href)) {\n        setActive(true);\n      }\n    }\n  }, []);\n\n  const Icon = useMemo(() => {\n    return icon ?? BiSolidTagAlt;\n  }, [icon]);\n\n  return (\n    <div\n      className={`flex flex-col relative z-30`}\n      style={{\n        color: active\n          ? scheme?.buttonSecondaryTextHover\n          : scheme?.buttonSecondaryText,\n        transition: 'color 0.3s ease-in-out',\n      }}\n    >\n      <NavigationButton\n        href={href}\n        onClick={() => {\n          if (onClick) onClick();\n        }}\n      >\n        <div className=\"w-[20px] h-[20px]\">\n          <Icon size={20} />\n        </div>\n        <span\n          className=\"pl-2\"\n          style={{\n            opacity: showMenu ? 1 : 0,\n            transition: 'opacity 0.3s ease-in-out',\n          }}\n        >\n          {children}\n        </span>\n      </NavigationButton>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { dark, light } from '../../config/themes';\nimport { LayoutMenuContext } from '../../contexts/context';\nimport { LayoutProps } from '../../types/types';\nimport { defineChildrenElement } from '../../utils/element';\nimport { Switcher } from '../Inputs/Switcher';\nimport { PCLayoutContent } from './Content';\nimport { PCLayoutHeaderActions } from './HeaderActions';\nimport { PCLayoutHeaderMenu, PCLayoutHeaderMenuItem } from './HeaderMenu';\nimport { PCLayoutLogo } from './Logo';\nimport { PCLayoutMenu } from './Menu';\nimport { PCLayoutMenuEndItem } from './MenuEndItem';\nimport { PCLayoutMenuItem } from './MenuItem';\n\nconst PCLayout = ({\n  children,\n  themeSwitcher,\n  colorSchemeDark,\n  colorSchemeDefault,\n}: LayoutProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [isDark, setIsDark] = useState(false);\n\n  const logo = useMemo(() => {\n    const defaultLogo = <h1 className=\"text-2xl\">LOGO</h1>;\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutLogo.name, defaultLogo);\n    } else {\n      return defineChildrenElement(children, Layout.Logo.name, defaultLogo);\n    }\n  }, [children]);\n\n  const menu = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutMenu.name, null);\n    } else {\n      return defineChildrenElement(children, Layout.Menu.name, null);\n    }\n  }, [children]);\n\n  const headerMenu = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutHeaderMenu.name, null);\n    } else {\n      return defineChildrenElement(children, Layout.HeaderMenu.name, null);\n    }\n  }, [children]);\n\n  const content = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutContent.name, null);\n    } else {\n      return defineChildrenElement(children, Layout.Content.name, null);\n    }\n  }, [children]);\n\n  const headerActions = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutHeaderActions.name, null);\n    } else {\n      return defineChildrenElement(children, Layout.HeaderActions.name, null);\n    }\n  }, [children]);\n\n  const scheme = useMemo(() => {\n    if (isDark) {\n      return {\n        ...dark,\n        ...colorSchemeDark,\n      };\n    }\n    return {\n      ...light,\n      ...colorSchemeDefault,\n    };\n  }, [isDark, colorSchemeDark, colorSchemeDefault]);\n\n  const handleSwitcherChange = useCallback(\n    (value: boolean) => {\n      setIsDark(value);\n      localStorage.setItem('dark-mode', JSON.stringify(value));\n    },\n    [isDark]\n  );\n\n  useEffect(() => {\n    const dark = localStorage.getItem('dark-mode');\n    if (dark) {\n      setIsDark(JSON.parse(dark));\n    }\n  }, []);\n\n  return (\n    <LayoutMenuContext.Provider\n      value={{\n        showMenu,\n        setShowMenu,\n        scheme,\n      }}\n    >\n      <div\n        className={`w-screen, h-screen flex flex-col`}\n        style={{\n          color: scheme?.textPrimary,\n          backgroundColor: scheme?.background,\n          transition: 'color 0.3s ease-in-out',\n        }}\n      >\n        <div\n          className={`w-full h-16 flex items-center justify-between px-4 z-40`}\n          style={{\n            backgroundColor: scheme?.secondary,\n            transition: 'background-color 0.3s ease-in-out',\n          }}\n        >\n          <div className=\"h-full py-2\">{logo}</div>\n          <div className=\"flex items-center gap-4\">\n            {themeSwitcher && (\n              <Switcher value={isDark} onChange={handleSwitcherChange} />\n            )}\n            {headerActions}\n            {headerMenu}\n          </div>\n        </div>\n        <div\n          className=\"flex-1 flex relative\"\n          style={{\n            maxHeight: 'calc(100vh - 4rem)',\n          }}\n        >\n          {menu}\n          {content}\n        </div>\n      </div>\n    </LayoutMenuContext.Provider>\n  );\n};\n\nconst Layout = {\n  Root: PCLayout,\n  Logo: PCLayoutLogo,\n  Menu: PCLayoutMenu,\n  MenuItem: PCLayoutMenuItem,\n  MenuEndItem: PCLayoutMenuEndItem,\n  HeaderMenu: PCLayoutHeaderMenu,\n  HeaderMenuItem: PCLayoutHeaderMenuItem,\n  Content: PCLayoutContent,\n  HeaderActions: PCLayoutHeaderActions,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { PCLayoutLogoProps } from '../../../types/types';\n\nexport const PCLayoutLogo = ({ src, element }: PCLayoutLogoProps) => {\n  if (src) {\n    return <img src={src} alt=\"Logo\" className=\"h-full\" />;\n  }\n  if (element) {\n    return (\n      <>\n        {element()}\n      </>)\n  }\n  return null;\n};\n","import React, { useMemo } from 'react';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport { MdClose } from 'react-icons/md';\nimport { twMerge } from 'tailwind-merge';\nimport { defineAllChildrenElement } from '../../../utils/element';\nimport { LayoutMenuContext } from '../../../contexts/context';\nimport Layout from '..';\nimport { PCLayoutMenuItem } from '../MenuItem';\nimport { PCLayoutMenuEndItem } from '../MenuEndItem';\n\nexport const PCLayoutMenu = ({\n  children,\n  style,\n  className,\n}: {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  className?: string;\n}) => {\n  const { showMenu, scheme, setShowMenu } = React.useContext(LayoutMenuContext);\n\n  const menuItems = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineAllChildrenElement(children, PCLayoutMenuItem.name);\n    } else {\n      return defineAllChildrenElement(children, Layout.MenuItem.name);\n    }\n  }, [children]);\n\n  const endItens = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineAllChildrenElement(children, PCLayoutMenuEndItem.name);\n    } else {\n      return defineAllChildrenElement(children, Layout.MenuEndItem.name);\n    }\n  }, [children]);\n\n  // return <div className=\"flex flex-col gap-1 w-full z-30\">{menuItems}</div>;\n  return (\n    <div\n      className={twMerge(`flex flex-col overflow-hidden z-30`, className)}\n      style={{\n        maxWidth: showMenu ? '50vw ' : '3rem',\n        transition:\n          'max-width 0.3s ease-in-out, background-color 0.3s ease-in-out',\n        boxShadow: '-2px 0 10px rgba(0,0,0,0.5)',\n        backgroundColor: scheme?.primary,\n        ...style,\n      }}\n    >\n      <button\n        type=\"button\"\n        className={`self-end mr-3 mt-1 mb-4`}\n        style={{\n          color: scheme?.buttonPrimary,\n          transition: 'color 0.3s ease-in-out',\n        }}\n        onClick={() => setShowMenu?.(!showMenu)}\n      >\n        {showMenu ? <MdClose size={20} /> : <GiHamburgerMenu size={20} />}\n      </button>\n      <div className=\"w-full h-full z-30 flex flex-col\">\n        <div className=\"flex flex-col gap-1 flex-1\">{menuItems}</div>\n        {endItens.length > 0 && (\n          <div\n            className=\"pt-3 border-t flex flex-col gap-1 mb-3 \"\n            style={{\n              borderColor: scheme?.secondary,\n            }}\n          >\n            {endItens}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo, useState } from 'react';\nimport Layout from '..';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { defineAllChildrenElement } from '../../../utils/element';\nimport { capitalizeName, returnInitials } from '../../../utils/format';\nimport { NavigationButton } from '../../Inputs';\n\nexport function PCLayoutHeaderMenu({\n  userName,\n  customAvatar,\n  userImage,\n  children,\n}: {\n  userName?: string;\n  userImage?: string;\n  customAvatar?: ({\n    userName,\n    userImage,\n  }: {\n    userName?: string;\n    userImage?: string;\n  }) => React.ReactNode;\n  children: React.ReactNode;\n}) {\n  const scheme = useTheme();\n\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n\n  const headerMenuItem = useMemo(() => {\n    if (process.env.NODE_ENV == 'development') {\n      return defineAllChildrenElement(children, PCLayoutHeaderMenuItem.name);\n    } else {\n      return defineAllChildrenElement(children, Layout.HeaderMenuItem.name);\n    }\n  }, [children]);\n  \n  if (customAvatar) {\n    return <>{customAvatar({ userName, userImage })}</>;\n  }\n\n  return (\n    <div className=\"relative\">\n      <button\n        className={`w-10 h-10 rounded-full font-bold`}\n        style={{\n          backgroundColor: scheme?.buttonPrimary,\n          color: scheme?.buttonPrimaryText,\n          transition:\n            'background-color 0.3s ease-in-out, color 0.3s ease-in-out',\n        }}\n        onClick={() => setShowProfileMenu(!showProfileMenu)}\n      >\n        {userImage ? (\n          <img\n            src={userImage}\n            alt={userName}\n            className=\"w-full h-full rounded-full\"\n          />\n        ) : userName ? (\n          <span className=\"w-full h-full flex items-center justify-center\">\n            {returnInitials(userName)}\n          </span>\n        ) : null}\n      </button>\n      <div\n        className={`absolute shadow-2xl overflow-hidden rounded-lg z-10`}\n        style={{\n          top: 'calc(100% + 20px)',\n          right: '0',\n          maxHeight: showProfileMenu ? 'calc(2rem * 3 + 8px)' : '0',\n          transition:\n            'max-height 0.3s ease-in-out, background-color 0.3s ease-in-out, color 0.3s ease-in-out',\n          color: scheme?.textPrimary,\n          backgroundColor: scheme?.primary,\n        }}\n      >\n        {headerMenuItem && (\n          <div className=\"px-3 py-2\">\n            <span className=\"whitespace-nowrap font-bold h-8\">\n              {userName && capitalizeName(userName)}\n            </span>\n            <div className=\"flex flex-col w-full\">{headerMenuItem}</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport function PCLayoutHeaderMenuItem({\n  children,\n  href,\n  onClick,\n}: {\n  children: React.ReactNode;\n  href?: string;\n  onClick?: () => void;\n}) {\n  return (\n    <NavigationButton\n      href={href}\n      onClick={onClick}\n      className=\"w-full text-left h-8 flex items-center hover:bg-transparent hover:text-inherit p-0\"\n    >\n      {children}\n    </NavigationButton>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../../hooks/useTheme';\n\nexport const PCLayoutContent = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  const scheme = useTheme();\n\n  const rootClass = useMemo(() => {\n    const rclass = 'flex-1 max-w-full max-h-full overflow-auto';\n    return twMerge(rclass);\n  }, [scheme]);\n  return (\n    <div\n      className={rootClass}\n      style={{\n        backgroundColor: scheme?.background,\n        color: scheme?.textPrimary,\n        transition: 'background-color 0.3s ease-in-out, color 0.3s ease-in-out',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport function PCLayoutHeaderActions({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return <div className=\"flex gap-3\">{children}</div>;\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useTheme } from '../../hooks/useTheme';\nimport { FormContext } from '../../contexts/formContext';\n\nexport const PCLayoutFilters = ({\n  onSubmit,\n  onClear,\n  children,\n  actions,\n}: {\n  onSubmit?: (values: Object) => void;\n  onClear?: () => void;\n  children?: React.ReactNode;\n  actions?: () => React.ReactNode;\n}) => {\n  const scheme = useTheme();\n\n  const [openFilter, setOpenFilter] = useState(false);\n  const form = useRef<HTMLFormElement>(null);\n  const button = useRef<HTMLButtonElement>(null);\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const data = new FormData(form);\n    const entries = data.entries();\n    const values = Object.fromEntries(entries);\n    onSubmit?.(values);\n  };\n\n  const clickOut = (event: MouseEvent) => {\n    if (button.current && button.current.contains(event.target as Node)) {\n      return;\n    }\n    if (form.current && !form.current.contains(event.target as Node)) {\n      setOpenFilter(false);\n    }\n  };\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('click', clickOut);\n    }\n    return () => {\n      if (window) {\n        window.removeEventListener('click', clickOut);\n      }\n    };\n  }, []);\n\n  return (\n    <FormContext.Provider\n      value={{\n        formRef: form,\n      }}\n    >\n      <div className=\"h-12 w-full flex items-center relative z-20\">\n        <button\n          type=\"button\"\n          className={`px-3 py-1 rounded-lg text-sm font-bold`}\n          style={{\n            backgroundColor: scheme?.buttonPrimary,\n            color: scheme?.buttonPrimaryText,\n            transition:\n              'background-color 0.3s ease-in-out, color 0.3s ease-in-out',\n          }}\n          onClick={() => setOpenFilter(!openFilter)}\n          ref={button}\n        >\n          Filtros\n        </button>\n        <div\n          className={`absolute top-12 max-w-full rounded-b-lg rounded-se-lg  ${\n            openFilter ? 'max-h-screen' : 'max-h-0 overflow-auto'\n          }`}\n          style={{\n            minWidth: '60%',\n            transition:\n              'max-height 0.1s ease-in-out, background-color 0.3s ease-in-out, color 0.3s ease-in-out, overflow 0.3s ease-in-out',\n            backgroundColor: scheme?.backgroundSecondary,\n          }}\n        >\n          <form\n            className=\"flex flex-col p-3 border border-slate-700 rounded-lg\"\n            onSubmit={handleFormSubmit}\n            ref={form}\n          >\n            {children}\n            <div className=\"flex justify-end\">\n              {actions && actions()}\n              <button\n                type=\"reset\"\n                className=\"px-3 py-1 bg-slate-700 text-slate-100 rounded-lg mr-2\"\n                onClick={() => {\n                  form.current?.reset();\n                  onClear?.();\n                }}\n              >\n                Limpar filtros\n              </button>\n              <button\n                type=\"submit\"\n                className=\"px-3 py-1 bg-slate-700 text-slate-100 rounded-lg\"\n              >\n                Filtrar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </FormContext.Provider>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { useTheme } from '../../hooks/useTheme';\n\nexport const PCLayoutPagination = ({\n  currentPage,\n  totalPages,\n  perPage,\n  onChangePerPage,\n  onChangePage,\n}: {\n  currentPage: number;\n  totalPages: number;\n  perPage?: number;\n  onChangePerPage?: (perPage: number) => void;\n  onChangePage: (page: number) => void;\n}) => {\n  const scheme = useTheme();\n\n  const pages = useMemo(() => {\n    const pages: any[] = [];\n    const previousPage = currentPage - 1;\n    const nextPage = currentPage + 1;\n\n    if (previousPage >= 1) {\n      pages.push(previousPage);\n    }\n    pages.push(currentPage);\n    if (nextPage <= totalPages) {\n      pages.push(nextPage);\n      if (pages.length == 2 && nextPage + 1 <= totalPages) {\n        pages.push(nextPage + 1);\n      }\n    }\n\n    if (currentPage >= 3) {\n      pages.unshift(1);\n    }\n\n    if (pages[pages.length - 1] < totalPages) {\n      pages.push(totalPages);\n    }\n\n    // add dots if necessary after first page and before last page\n    if (pages.length >= 2) {\n      if (pages[1] > 2) {\n        pages.splice(1, 0, '...');\n      }\n      if (pages[pages.length - 2] < totalPages - 1) {\n        pages.splice(pages.length - 1, 0, '...');\n      }\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n\n  const handlePageClick = (page: any) => {\n    if (page === currentPage) {\n      return;\n    }\n    if (page < 1) {\n      return;\n    }\n    if (page > totalPages) {\n      return;\n    }\n    onChangePage(page);\n  };\n  return (\n    <div\n      className={`w-full h-12 flex flex-col items-center justify-center relative border-t`}\n      style={{\n        backgroundColor: scheme?.tertiary,\n        transition: 'background-color 0.3s ease-in-out',\n      }}\n    >\n      <nav aria-label=\"Pagination\" className=\"flex items-center\">\n        <button\n          type='button'\n          className={`p-2 mr-4 rounded`}\n          style={{\n            color: scheme?.textPrimary,\n            transition: 'color 0.3s ease-in-out',\n          }}\n          onClick={() => handlePageClick(currentPage - 1)}\n        >\n          <IoIosArrowBack />\n        </button>\n        {pages.map((page, index) => {\n          return (\n            <button\n            type='button' \n              className={`p-2 mr-1 rounded ${\n                page === currentPage ? 'font-bold' : 'font-normal'\n              } ${page == '...' ? 'cursor-default' : ''}`}\n              style={{\n                transform: page === currentPage ? 'scale(1.1)' : 'scale(1)',\n                transition:\n                  'transform 0.2s ease-in-out, color 0.3s ease-in-out',\n                color:\n                  page === currentPage\n                    ? scheme?.textPrimaryHover\n                    : scheme?.textPrimary,\n              }}\n              onClick={() => page != '...' && handlePageClick(page)}\n              key={index}\n            >\n              {page}\n            </button>\n          );\n        })}\n        <button\n          type='button'\n          className={`p-2 ml-4 rounded`}\n          style={{\n            color: scheme?.textPrimary,\n            transition: 'color 0.3s ease-in-out',\n          }}\n          onClick={() => handlePageClick(currentPage + 1)}\n        >\n          <IoIosArrowForward />\n        </button>\n      </nav>\n      {perPage && onChangePerPage && (\n        <div className=\"md:absolute md:left-5 md:block hidden h-6\">\n          <label htmlFor=\"perPage\">Items por página</label>\n          <select\n            className={`ml-5 bg-transparent`}\n            id=\"perPage\"\n            value={perPage}\n            onChange={e => onChangePerPage(Number(e.target.value))}\n          >\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={50}>50</option>\n            <option value={100}>100</option>\n          </select>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useTheme } from '../../hooks/useTheme';\nimport { childrenWithout, defineChildrenElement } from '../../utils/element';\nimport { PCLayoutPagination } from '../Pagination';\nimport { PCLayoutTBody } from './TBody';\nimport { PCLayoutTHead } from './THead';\nimport { PCLayoutTD } from './TD';\nimport { PCLayoutTH } from './TH';\nimport { PCLayoutTR } from './TR';\n\nexport const PCLayoutTable = ({ children }: { children?: React.ReactNode }) => {\n  const scheme = useTheme();\n\n  const pagination = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    const defaultLogo = null;\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutPagination.name, defaultLogo);\n    } else {\n      return defineChildrenElement(children, Table.Pagination.name, defaultLogo);\n    }\n  }, [children]);\n\n  const restChildren = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return childrenWithout(children, [PCLayoutPagination.name,]);\n    } else {\n      return childrenWithout(children, [Table.Pagination.name]);\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={`flex flex-col h-[98%] w-full rounded-xl overflow-hidden`}\n      style={{\n        boxShadow: '0 0 10px -3px #0000007b',\n        backgroundColor: scheme?.backgroundSecondary,\n        transition: 'background-color 0.3s ease-in-out',\n      }}\n    >\n      <div\n        className={`flex-1 overflow-y-auto`}\n        style={{\n          maxHeight: `calc(100% - ${pagination ? '3rem' : '0.5rem'})`,\n        }}\n      >\n        <table className=\"w-full min-w-max table-auto text-left relative\">\n          {restChildren}\n        </table>\n      </div>\n      {pagination}\n    </div>\n  );\n};\n\nconst Table : {\n  Root : typeof PCLayoutTable;\n  TBody : typeof PCLayoutTBody;\n  THead : typeof PCLayoutTHead;\n  TH : typeof PCLayoutTH;\n  TD : typeof PCLayoutTD;\n  TR : typeof PCLayoutTR;\n  Pagination : typeof PCLayoutPagination;\n} = {\n  Root: PCLayoutTable,\n  TBody: PCLayoutTBody,\n  THead: PCLayoutTHead,\n  TH: PCLayoutTH,\n  TD: PCLayoutTD,\n  TR: PCLayoutTR,\n  Pagination: PCLayoutPagination,\n};\n\nexport default Table;\n","import React from 'react';\n\nexport const PCLayoutTBody = ({ children}: {\n  children: React.ReactNode;\n}) => {\n  return <tbody>{children}</tbody>;\n};\n","import React from 'react';\nimport { useTheme } from '../../../hooks/useTheme';\n\nexport const PCLayoutTHead = ({ children }: { children: React.ReactNode }) => {\n  const scheme = useTheme();\n  return (\n    <thead\n      className={`sticky top-0 z-10`}\n      style={{\n        borderCollapse: 'separate',\n        backgroundColor: scheme?.tertiary,\n        transition: 'background-color 0.3s ease-in-out',\n      }}\n    >\n      <tr>{children}</tr>\n      <tr>\n        <th className=\"h-[1px] bg-slate-200\" colSpan={6} />\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\n\nexport const PCLayoutTH = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  return (\n    <th className=\"p-4\">\n      <p className=\"antialiased font-sans font-bold text-sm flex items-center justify-between gap-2 leading-none opacity-70\">\n        {children}\n      </p>\n    </th>\n  );\n};\n","import React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nexport const PCLayoutTD = ({\n  children,\n  className,\n  ...props\n}: {\n  children?: React.ReactNode;\n  className?: string;\n} & React.TdHTMLAttributes<HTMLTableCellElement>\n) => {\n  return (\n    <td\n      className={twMerge('p-4 border-b border-blue-gray-50', className)}\n      {...props}\n    >\n      {children}\n    </td>\n  );\n};\n","import React from 'react';\n\nexport const PCLayoutTR = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n  return <tr>{children}</tr>;\n};\n","import React, { useMemo } from 'react';\nimport { defineChildrenElement } from '../../utils/element';\nimport { NavigationButton } from '../Inputs/NavigationButton';\nimport { PCLayoutFilters } from '../Filter';\nimport { PCLayoutListContent } from './ListContent';\n\nconst PCLayoutList = ({\n  children,\n  title,\n  createButtonTitle,\n  onCreateClick,\n  createButtonHref,\n  renderPreList,\n  renderPosList,\n  actions,\n}: {\n  children?: React.ReactNode;\n  title?: string;\n  createButtonTitle?: string;\n  onCreateClick?: () => void;\n  createButtonHref?: string;\n  renderPreList?: () => React.ReactNode;\n  renderPosList?: () => React.ReactNode;\n  actions?: () => React.ReactNode;\n}) => {\n  const filters = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutFilters.name, null);\n    } else {\n      return defineChildrenElement(children, List.Filters.name, null);\n    }\n  }, [children]);\n\n  const content = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutListContent.name, null);\n    } else {\n      return defineChildrenElement(children, List.Content.name, null);\n    }\n  }, [children]);\n\n  return (\n    <div className=\"w-full h-full flex flex-col px-3 pt-2\">\n      <div className=\"flex items-center justify-between\">\n        {title && <h1 className=\"text-3xl font-bold mb-2\">{title}</h1>}\n        <div\n          className=\"flex items-center\"\n          style={{\n            gap: '0.5rem',\n          }}\n        >\n          {actions?.()}\n          {createButtonTitle && (\n            <NewButton\n              createButtonHref={createButtonHref}\n              onCreateClick={onCreateClick}\n              createButtonTitle={createButtonTitle}\n            />\n          )}\n        </div>\n      </div>\n      {filters}\n      <div\n        className=\"flex flex-col flex-1\"\n        style={{\n          height: 'calc(100% - 6rem)',\n        }}\n      >\n        {renderPreList?.()}\n        <div className=\"w-full h-full\">{content}</div>\n        {renderPosList?.()}\n      </div>\n    </div>\n  );\n};\n\nconst List: {\n  Root: typeof PCLayoutList;\n  Content: typeof PCLayoutListContent;\n  Filters: typeof PCLayoutFilters;\n} = {\n  Root: PCLayoutList,\n  Content: PCLayoutListContent,\n  Filters: PCLayoutFilters,\n};\n\nexport default List;\n\nfunction NewButton({\n  createButtonHref,\n  onCreateClick,\n  createButtonTitle,\n}: {\n  createButtonHref?: string;\n  onCreateClick?: () => void;\n  createButtonTitle?: string;\n  children?: React.ReactNode;\n}) {\n  return (\n    <NavigationButton\n      className={`px-3 py-1 text-sm rounded-lg font-bold max-w-fit`}\n      fill\n      href={createButtonHref}\n      onClick={() => onCreateClick?.()}\n    >\n      {createButtonTitle}\n    </NavigationButton>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { defineChildrenElement } from '../../../utils/element';\nimport Table, { PCLayoutTable } from '../../Table';\n\nexport const PCLayoutListContent = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const table = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutTable.name, null);\n    } else {\n      return defineChildrenElement(children, Table.Root.name, null);\n    }\n  }, [children]);\n\n  return <div className=\"w-full h-full\">{table ?? children}</div>;\n};\n","import React from 'react';\n\nexport const PCLayoutPageContent = ({\n  children,\n}: {\n  children?: React.ReactNode;\n}) => {\n\n  return <div className=\"w-full h-full\">{children}</div>;\n};\n","import React, { useMemo } from 'react';\nimport { defineChildrenElement } from '../../utils/element';\nimport { PCLayoutFilters } from '../Filter';\nimport { PCLayoutPagination } from '../Pagination';\nimport { PCLayoutPageContent } from './PageContent';\n\nconst PCLayoutPage = ({\n  children,\n  title,\n  actions,\n}: {\n  children?: React.ReactNode;\n  title?: string;\n  actions?: () => React.ReactNode;\n}) => {\n  const filters = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutFilters.name, null);\n    } else {\n      return defineChildrenElement(children, Page.Filters.name, null);\n    }\n  }, [children]);\n\n  const content = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutPageContent.name, null);\n    } else {\n      return defineChildrenElement(children, Page.Content.name, null);\n    }\n  }, [children]);\n  const pagination = useMemo(() => {\n    if (!children) {\n      return null;\n    }\n    const defaultLogo = null;\n    if (process.env.NODE_ENV == 'development') {\n      return defineChildrenElement(children, PCLayoutPagination.name, defaultLogo);\n    } else {\n      return defineChildrenElement(children, Page.Pagination.name, defaultLogo);\n    }\n  }, [children]);\n\n  return (\n    <div className=\"w-full flex flex-col px-3 pt-2\"\n    style={{\n      height: 'calc(100vh - 4.2rem)',\n\n    }}\n    >\n      <div className=\"flex items-center justify-between\">\n        {title && <h1 className=\"text-3xl font-bold mb-2\">{title}</h1>}\n        <div\n          className=\"flex items-center\"\n          style={{\n            gap: '0.5rem',\n          }}\n        >\n          {actions?.()}\n        </div>\n      </div>\n      <div>\n      {filters}\n      </div>\n      <div\n        className=\" w-full flex flex-col flex-1 \"\n      >\n        <div className=\"w-full flex-1\">{content}</div>\n        <div>\n          {pagination}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Page: {\n  Root: typeof PCLayoutPage;\n  Content: typeof PCLayoutPageContent;\n  Pagination: typeof PCLayoutPagination;\n  Filters: typeof PCLayoutFilters;\n} = {\n  Root: PCLayoutPage,\n  Content: PCLayoutPageContent,\n  Pagination: PCLayoutPagination,\n  Filters: PCLayoutFilters,\n};\n\nexport default Page;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { PCLayoutButtonProps } from '../../../types/types';\n\n\n\nexport const Button = ({\n  children,\n  onClick,\n  className,\n  style,\n  ...props\n}: PCLayoutButtonProps) => {\n  const scheme = useTheme()\n  const [hover, setHover] = useState(false);\n\n  const handleMouseEnter = () => {\n    setHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHover(false);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={twMerge(\n        `flex items-center h-8 text-left w-full px-4 rounded`,\n        className\n      )}\n      style={{\n        transition: 'background-color 0.3s ease-in-out',\n        backgroundColor: hover\n          ? scheme?.buttonPrimaryHover\n          : scheme?.buttonPrimary,\n        color: hover\n          ? scheme?.buttonPrimaryTextHover\n          : scheme?.buttonPrimaryText,\n        ...style,\n      }}\n      onClick={onClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { RiArrowDownSLine } from 'react-icons/ri';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { FormContext } from '../../../contexts/formContext';\n\ninterface IMultiselectProps {\n  name: string;\n  options: ISelectOption[];\n  placeholder?: string;\n  value?: string | string[];\n  multiple?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n  label?: string;\n  error?: string;\n  onChange?: (value: string | string[] | undefined) => void;\n}\n\ninterface ISelectOption {\n  value: string;\n  label: string;\n}\n\nexport const CustomSelect = ({\n  name,\n  options,\n  placeholder,\n  value,\n  multiple,\n  className,\n  style,\n  label,\n  error,\n  onChange,\n}: IMultiselectProps) => {\n  const scheme = useTheme();\n\n  const { formRef } = React.useContext(FormContext);\n\n  const [selectedValues, setSelectedValues] = useState<any>([]);\n  const [search, setSearch] = useState('');\n\n  const refSelect = useRef<HTMLDivElement>(null);\n  const refOptions = useRef<HTMLDivElement>(null);\n\n  const handleOpenOptions = () => {\n    if (refOptions.current) {\n      refOptions.current.classList.toggle('hidden');\n      refOptions.current.style.top = `${(refSelect.current?.offsetTop || 0) +\n        (refSelect.current?.offsetHeight || 0) +\n        4}px`;\n      refOptions.current.style.left = `${refSelect.current?.offsetLeft || 0}px`;\n\n      if (\n        refOptions.current.offsetLeft + refOptions.current.offsetWidth >\n        window.innerWidth\n      ) {\n        refOptions.current.style.left = `${(refSelect.current?.offsetLeft ||\n          0) -\n          (refOptions.current.offsetWidth -\n            (refSelect.current?.offsetWidth || 0))}px`;\n      }\n\n      if (\n        refOptions.current.offsetTop + refOptions.current.offsetHeight + 40 >\n        window.innerHeight\n      ) {\n        refOptions.current.style.top = `${(refSelect.current?.offsetTop || 0) -\n          refOptions.current.offsetHeight -\n          4}px`;\n      }\n    }\n  };\n\n  const handleClickOutside = (e: any) => {\n    if (\n      refOptions.current &&\n      !refOptions.current.contains(e.target as Node) &&\n      refSelect.current &&\n      !refSelect.current.contains(e.target as Node)\n    ) {\n      refOptions.current.classList.add('hidden');\n    }\n  };\n\n  const resetForm = () => {\n    console.log('reset');\n    setSelectedValues([]);\n    onChange && onChange(undefined);\n  };\n\n  useEffect(() => {\n    if (formRef) {\n      formRef.current?.addEventListener('reset', resetForm);\n    }\n\n    return () => {\n      formRef.current?.removeEventListener('reset', resetForm);\n    };\n  }, [formRef]);\n\n  useEffect(() => {\n    window.addEventListener('click', handleClickOutside);\n\n    return () => {\n      window.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (value) {\n      if (typeof value === 'string') {\n        setSelectedValues([value.split(',')]);\n      } else {\n        setSelectedValues(value);\n      }\n    } else {\n      setSelectedValues([]);\n    }\n  }, [value]);\n\n  const valueText = useMemo(() => {\n    if (selectedValues.length > 0 && selectedValues.length < 2) {\n      return options.find(option => option.value === selectedValues[0])?.label;\n    } else if (selectedValues.length > 1) {\n      return `${selectedValues.length} selecionados`;\n    } else {\n      return placeholder || 'Selecione';\n    }\n  }, [selectedValues]);\n\n  return (\n    <div className=\"w-full\">\n      {multiple ? (\n        selectedValues.map((item: any) => (\n          <input type=\"hidden\" name={name} value={item} key={item} />\n        ))\n      ) : (\n        <input\n          type=\"hidden\"\n          name={name}\n          value={selectedValues.length > 0 ? selectedValues[0] : ''}\n        />\n      )}\n      {label && (\n        <label\n          className=\"block uppercase tracking-wide text-xs font-bold\"\n          style={{\n            color: !error ? scheme?.textPrimary : scheme?.error,\n            transition: 'color 0.3s ease-in-out',\n          }}\n        >\n          {label}\n        </label>\n      )}\n      <div\n        ref={refSelect}\n        onClick={handleOpenOptions}\n        className={twMerge(\n          'w-full h-10 border rounded-md leading-tight flex-row flex items-center gap-1 overflow-hidden pl-2 cursor-pointer',\n          className\n        )}\n        style={{\n          transition: 'all 0.3s ease-in-out',\n          backgroundColor: scheme?.inputPrimaryBackground,\n          color: scheme?.inputPrimaryText,\n          border: !error\n            ? `1px solid ${scheme?.inputPrimaryBorder}`\n            : `1px solid ${scheme?.error}`,\n          ...style,\n        }}\n      >\n        <input\n          type=\"text\"\n          value={valueText}\n          className=\"w-full outline-none\"\n          readOnly\n        />\n        <RiArrowDownSLine size={24} />\n      </div>\n      {error && (\n        <p\n          className=\"text-xs italic\"\n          style={{\n            color: scheme?.error,\n            transition: 'color 0.3s ease-in-out',\n          }}\n        >\n          {error}\n        </p>\n      )}\n      <div\n        ref={refOptions}\n        className=\"z-50 absolute overflow-hidden bg-white rounded-lg hidden border border-slate-400\"\n        style={{\n          width: refSelect.current?.offsetWidth,\n          boxShadow: '0px 0px 5px rgba(0,0,0,0.4)',\n        }}\n      >\n        <div className=\"w-full flex items-center border-b border-slate-400\">\n          <BiSearchAlt className=\"ml-1\" />\n          <input\n            type=\"text\"\n            className=\"w-full outline-none  py-1 px-1\"\n            placeholder=\"Pesquisar\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n          />\n        </div>\n        <ul className=\"flex flex-col gap-1 max-h-[200px] overflow-y-scroll\">\n          {options\n            .filter(option =>\n              option.label.toLowerCase().includes(search.toLowerCase())\n            )\n            .map(option => (\n              <li key={option.value}>\n                <button\n                  type=\"button\"\n                  className={`w-full text-left p-2 overflow-hidden text-ellipsis whitespace-nowrap ${!multiple &&\n                    selectedValues.includes(option.value) &&\n                    'bg-slate-500 text-white'}`}\n                  onClick={() => {\n                    if (selectedValues.includes(option.value)) {\n                      if (!multiple) {\n                        setSelectedValues([]);\n                        onChange && onChange([]);\n                        refOptions.current?.classList.toggle('hidden');\n                      } else {\n                        setSelectedValues(\n                          selectedValues.filter(\n                            (item: any) => item !== option.value\n                          )\n                        );\n                        onChange &&\n                          onChange(\n                            selectedValues.filter(\n                              (item: any) => item !== option.value\n                            )\n                          );\n                      }\n                    } else {\n                      if (!multiple) {\n                        setSelectedValues([option.value]);\n                        onChange && onChange([option.value]);\n                        refOptions.current?.classList.toggle('hidden');\n                      } else {\n                        setSelectedValues([...selectedValues, option.value]);\n                        onChange && onChange([...selectedValues, option.value]);\n                      }\n                    }\n                  }}\n                >\n                  {multiple && (\n                    <input\n                      type=\"checkbox\"\n                      value={option.value}\n                      checked={selectedValues.includes(option.value)}\n                      onChange={() => {}}\n                      className=\"mr-2\"\n                    />\n                  )}\n                  {option.label}\n                </button>\n              </li>\n            ))}\n        </ul>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setSelectedValues([]);\n            onChange && onChange(undefined);\n          }}\n          className=\"w-full bg-slate-300 font-bold border-t border-slate-400\"\n        >\n          Limpar\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { useTheme } from '../../../hooks/useTheme';\nimport { PCLayoutInputProps } from '../../../types/types';\n\nexport const Input = ({\n  label,\n  error,\n  containerClassName,\n  customInput,\n  ...props\n}: PCLayoutInputProps) => {\n  const scheme = useTheme();\n\n  return (\n    <div className={twMerge('w-full', containerClassName)}>\n      {label && (\n        <label\n          className=\"block uppercase tracking-wide text-xs font-bold\"\n          style={{\n            color: !error ? scheme?.textPrimary : scheme?.error,\n            transition: 'color 0.3s ease-in-out',\n          }}\n          htmlFor={props.name}\n        >\n          {label}\n        </label>\n      )}\n      {customInput &&\n        customInput({\n          label,\n          error,\n          ...props,\n          className: twMerge(\n            'appearance-none block w-full border rounded h-10 px-1 leading-tight focus:outline-none',\n            `placeholder:${scheme?.inputPrimaryPlaceholder}`,\n            props.className\n          ),\n          style: {\n            transition: 'all 0.3s ease-in-out',\n            backgroundColor: scheme?.inputPrimaryBackground,\n            color: scheme?.inputPrimaryText,\n            border: `1px solid ${scheme?.inputPrimaryBorder}`,\n            ...props.style,\n          },\n        })}\n      {!customInput && (\n        <>\n          <div\n            className={twMerge(\n              'w-full h-10 border rounded-md leading-tight flex-row flex items-center gap-1 overflow-hidden',\n              props.className\n            )}\n            style={{\n              transition: 'all 0.3s ease-in-out',\n              backgroundColor: scheme?.inputPrimaryBackground,\n              color: scheme?.inputPrimaryText,\n              border: !error\n                ? `1px solid ${scheme?.inputPrimaryBorder}`\n                : `1px solid ${scheme?.error}`,\n              ...props.style,\n            }}\n          >\n            {props.prefixElement && props.prefixElement()}\n            <input\n              {...props}\n              name={props.name}\n              id={props.name}\n              className={twMerge(\n                'appearance-none block w-full px-1 h-full focus:outline-none h-full leading-tight',\n                `placeholder:${scheme?.inputPrimaryPlaceholder}`\n              )}\n              style={{\n                minWidth: '95%',\n              }}\n            />\n            {props.suffixElement && props.suffixElement()}\n          </div>\n          {error && (\n            <p\n              className=\"text-xs italic\"\n              style={{\n                color: scheme?.error,\n                transition: 'color 0.3s ease-in-out',\n              }}\n            >\n              {error}\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { PCLayoutButtonProps } from '../../../types/types';\n\nexport const LinkButton = ({\n  children,\n  onClick,\n  className,\n  style,\n  href,\n  target,\n  download,\n  ...props\n}: PCLayoutButtonProps) => {\n  if (href) {\n    return (\n      <a\n        className=\"px-3 py-1 bg-slate-700 text-slate-100 rounded-lg mr-2\"\n        href={href}\n        target={target}\n        download={download}\n      >\n        {children}\n      </a>\n    );\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className=\"px-3 py-1 bg-slate-700 text-slate-100 rounded-lg mr-2\"\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","export const formatColor = (\n  color: string | null | undefined,\n  defaultColor: string = 'bg-white',\n  prefix: string = 'bg'\n): string => {\n  if (!color) {\n    return defaultColor;\n  }\n  if (color.startsWith('#')) {\n    return `${prefix}-[${color}]`;\n  } else {\n    return `${prefix}-${color}`;\n  }\n};\n"],"names":["LayoutMenuContext","React","createContext","showMenu","useTheme","useContext","scheme","isComponent","children","elementName","type","name","displayName","defineChildrenElement","defaultElement","element","Array","isArray","forEach","child","defineAllChildrenElement","push","childrenWithout","elementNames","elements","map","filter","includes","props","Form","Root","_ref","onSubmit","className","style","title","_objectWithoutPropertiesLoose","_excluded","actions","useMemo","Actions","content","Content","twMerge","event","preventDefault","entries","FormData","currentTarget","values","Object","fromEntries","_extends","boxShadow","backgroundColor","backgroundSecondary","transition","_ref2","_ref3","_excluded2","light","primary","secondary","tertiary","background","buttonPrimary","buttonPrimaryHover","buttonPrimaryText","buttonPrimaryTextHover","buttonSecondary","buttonSecondaryHover","buttonSecondaryText","buttonSecondaryTextHover","textPrimary","textSecondary","textPrimaryHover","textSecondaryHover","inputPrimaryBackground","inputPrimaryText","inputPrimaryPlaceholder","inputPrimaryBorder","inputSecondaryBackground","inputSecondaryText","inputSecondaryPlaceholder","inputSecondaryBorder","success","error","warning","info","dark","Switcher","value","onChange","checked","HiLightBulb","HiOutlineLightBulb","size","returnInitials","names","split","lastName","length","toUpperCase","capitalizeName","fullName","n","slice","toLowerCase","trim","NavigationButton","href","onClick","fill","_useState","useState","hover","setHover","Link","color","onMouseEnter","onMouseLeave","FormContext","formRef","current","PCLayoutMenuCollapseItem","showSubMenu","label","justifyContent","paddingInline","opacity","Layout","themeSwitcher","colorSchemeDark","colorSchemeDefault","setShowMenu","_useState2","isDark","setIsDark","logo","defaultLogo","Logo","menu","Menu","headerMenu","HeaderMenu","headerActions","HeaderActions","handleSwitcherChange","useCallback","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","Provider","maxHeight","src","alt","_React$useContext","menuItems","MenuItem","endItens","MenuEndItem","maxWidth","MdClose","GiHamburgerMenu","borderColor","collapseItens","icon","active","setActive","setShowSubMenu","ref","useRef","window","path","location","pathname","item","handleClickOutside","e","contains","target","console","log","addEventListener","removeEventListener","Icon","BiSolidTagAlt","BiChevronUp","BiChevronDown","marginBlock","position","left","index","key","userName","customAvatar","userImage","showProfileMenu","setShowProfileMenu","headerMenuItem","HeaderMenuItem","top","right","rootClass","PCLayoutFilters","onClear","openFilter","setOpenFilter","form","button","clickOut","minWidth","_form$current","reset","PCLayoutPagination","currentPage","totalPages","perPage","onChangePerPage","onChangePage","pages","previousPage","nextPage","unshift","splice","handlePageClick","page","IoIosArrowBack","transform","IoIosArrowForward","htmlFor","id","Number","Table","pagination","Pagination","restChildren","TBody","THead","borderCollapse","colSpan","TH","TD","TR","List","createButtonTitle","onCreateClick","createButtonHref","renderPreList","renderPosList","filters","Filters","gap","NewButton","height","table","Page","styleInject","css","insertAt","document","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","options","placeholder","multiple","selectedValues","setSelectedValues","search","setSearch","refSelect","refOptions","classList","add","resetForm","undefined","_formRef$current","_formRef$current2","valueText","_options$find","find","option","_refSelect$current","_refSelect$current2","_refSelect$current3","_refSelect$current4","_refSelect$current5","_refSelect$current6","toggle","offsetTop","offsetHeight","offsetLeft","offsetWidth","innerWidth","innerHeight","border","readOnly","RiArrowDownSLine","width","_refSelect$current7","BiSearchAlt","_refOptions$current","_refOptions$current2","concat","containerClassName","customInput","prefixElement","suffixElement","download","defaultColor","prefix","startsWith"],"mappings":"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"}